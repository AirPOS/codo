[
  {
    "file": "spec/templates/examples/animal.coffee",
    "doc": {
      "abstract": "Each animal implementation must inherit from {Animal}",
      "deprecated": "This class is not used anymore",
      "version": "0.2.0",
      "since": "0.1.0",
      "examples": [
        {
          "title": "How to subclass an animal",
          "code": "class Lion extends Animal\n  move: (direction, speed): ->"
        }
      ],
      "todos": [
        "Provide more examples"
      ],
      "notes": [
        "This is not used for codo, its purpose is to show all possible tags within a class."
      ],
      "authors": [
        "Michael Kessler"
      ],
      "comment": "<p>Base class for all animals.</p>"
    },
    "class": {
      "className": "Example.Animal",
      "name": "Animal",
      "namespace": "Example"
    },
    "methods": [
      {
        "doc": {
          "todos": [
            "Clean up"
          ],
          "comment": "<p>Construct a new animal.</p>",
          "params": [
            {
              "type": "String",
              "name": "name",
              "desc": "the name of the animal"
            },
            {
              "type": "Date",
              "name": "birthDate",
              "desc": "when the animal was born"
            }
          ]
        },
        "type": "instance",
        "signature": "- (void) <strong>constructor</strong>(name, birthDate = new Date())",
        "name": "constructor",
        "bound": false,
        "parameters": [
          {
            "name": "name",
            "splat": false
          },
          {
            "name": "birthDate",
            "default": "new Date()",
            "splat": false
          }
        ]
      },
      {
        "doc": {
          "abstract": "",
          "examples": [
            {
              "title": "Move an animal",
              "code": "new Lion('Simba').move('south', 12)"
            }
          ],
          "comment": "<p>Move the animal.</p>",
          "params": [
            {
              "type": "Object",
              "name": "options",
              "desc": "the moving options"
            }
          ],
          "options": [
            {
              "param": "options",
              "type": "String",
              "name": "direction",
              "desc": "the moving direction"
            },
            {
              "param": "options",
              "type": "Number",
              "name": "speed",
              "desc": "the speed in mph"
            }
          ]
        },
        "type": "instance",
        "signature": "- (void) <strong>move</strong>(options = {})",
        "name": "move",
        "bound": false,
        "parameters": [
          {
            "name": "options",
            "default": "{}",
            "splat": false
          }
        ]
      },
      {
        "doc": {
          "private": true,
          "deprecated": "Do not copulate",
          "version": "0.2.0",
          "since": "0.1.0",
          "notes": [
            "Don't take it seriously"
          ],
          "authors": [
            "Michael Kessler"
          ],
          "comment": "<p>Copulate another animal.</p>",
          "params": [
            {
              "type": "Animal",
              "name": "animal",
              "desc": "the partner animal"
            }
          ],
          "returnValue": {
            "type": "Boolean",
            "desc": "true when success"
          }
        },
        "type": "instance",
        "signature": "- (Boolean) <strong>copulate</strong>(animal)",
        "name": "copulate",
        "bound": true,
        "parameters": [
          {
            "name": "animal",
            "splat": false
          }
        ]
      },
      {
        "doc": {
          "comment": "<p>Moves all animal into the ark.</p>",
          "returnValue": {
            "type": "Boolean",
            "desc": "true when all in Ark"
          }
        },
        "type": "class",
        "signature": "+ (Boolean) <strong>enterArk</strong>()",
        "name": "enterArk",
        "bound": false,
        "parameters": []
      }
    ],
    "variables": []
  }
]
